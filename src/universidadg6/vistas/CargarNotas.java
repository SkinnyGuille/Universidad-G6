/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package universidadg6.vistas;

import java.sql.Connection;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import universidadg6.accesoadatos.AlumnoData;
import universidadg6.accesoadatos.Conexion;
import universidadg6.accesoadatos.InscripcionData;
import universidadg6.accesoadatos.MateriaData;
import universidadg6.entidades.Alumno;
import universidadg6.entidades.Inscripcion;
import universidadg6.entidades.Materia;


/**
 *
 * @author Familia
 */
public class CargarNotas extends javax.swing.JInternalFrame {
private Connection con;
private DefaultTableModel modelo= new DefaultTableModel(){
  public boolean isCellEditable(int fila, int columna){ 
           return false; 
  }

};

private List<Inscripcion> in;
private List<Materia> ma;
private List<Alumno> alu;
private InscripcionData idata;
private AlumnoData adata;
private MateriaData mdata;
    /**
     * Creates new form CargarNotas
     */
 public void CargarNotas() {
        initComponents();
        this.con= Conexion.getConexion();
        modelo=new DefaultTableModel();
        idata=new InscripcionData();
        adata=new AlumnoData();
        mdata=new MateriaData();
        in=idata.obtenerInscripciones();
        ma= mdata.listarMateria();
        alu=adata.listaAlumnos();
        cargar();
        cabecera();
        borrarlista();
    }
 
     public void cargar(){
        for(Alumno a:alu){
            jCBAlumno.addItem(a.getNombre());
        }
    }
       public void cabecera(){
        ArrayList<Object> col=new ArrayList();
        col.add("codigo");
        col.add("nombre");
        col.add("nota");
        for(Object o:col){
            modelo.addColumn(o);
        }
        jTable1.setModel(modelo);
    }

    /**
     * This method is called from within the constructor to initialize the form
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jCBAlumno = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();

        jLabel1.setText("Carga de notas");

        jLabel2.setText("Seleccione un alumno");

        jCBAlumno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCBAlumnoActionPerformed(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jButton1.setText("Guardar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Salir");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(43, 43, 43)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jCBAlumno, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(157, 157, 157)
                .addComponent(jButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton2)
                .addGap(27, 27, 27))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 385, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(164, 164, 164))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jCBAlumno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2))
                .addContainerGap(141, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        dispose();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        int fila = jTable1.getSelectedRow();
        if(fila!=-1){            
            int idma=(Integer)modelo.getValueAt(fila, 0);
            Alumno idal=(Alumno)jCBAlumno.getSelectedItem();
            int alumno=idal.getIdAlumno();
            int nota=(Integer.parseInt(JOptionPane.showInputDialog("Ingrese nota a modificar")));
            idata.actualizarNota(alumno, idma, nota);
            borrarlista();
        }else{
            JOptionPane.showMessageDialog(this, "Usted debe seleccionar un alumno");
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jCBAlumnoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCBAlumnoActionPerformed
        // TODO add your handling code here:
         cargarInscriptas();
    }//GEN-LAST:event_jCBAlumnoActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JComboBox<String> jCBAlumno;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables

    public void borrarlista(){
    int a=modelo.getRowCount()-1;
    for(int i=a;i>=0;i--){
        modelo.removeRow(i);
    }
    }
    
    public void cargarInscriptas(){
        borrarlista();
        Alumno a=(Alumno)jCBAlumno.getSelectedItem();
        in=idata.obtenerInscripciones();
        if(a!=null){
        ArrayList<Materia> lista= (ArrayList) idata.obtenerMateriaCursadas(a.getIdAlumno());
        for(Materia mat:lista){
            for(Inscripcion insc:in){
                if(insc.getAlumno().getIdAlumno()==a.getIdAlumno()){
                    modelo.addRow(new Object[]{mat.getIdMateria(),mat.getNombre(),insc.getNota()});
                    }               
                }
            }       
        }else{
            JOptionPane.showMessageDialog(this, "Usted debe seleccionar un alumno");
        }
    }
    
    
}
